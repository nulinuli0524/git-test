name: Build libgs & libgs_napi

on:
  push:
    branches: [ main ]
  workflow_dispatch:

env:
  NDK_VERSION: '21.4.7075529'
  API_LEVEL: '21'
  ANDROID_ABI: 'arm64-v8a'

jobs:
  build:
    runs-on: ubuntu-latest

    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Install host dependencies
        run: |
          sudo apt-get update
          sudo apt-get install -y git autoconf automake libtool pkg-config

      - name: Setup Android NDK
        uses: android-actions/setup-ndk@v3
        with:
          ndk-version: ${{ env.NDK_VERSION }}

      - name: Clone Ghostscript source
        run: git clone --depth=1 https://github.com/ArtifexSoftware/ghostpdl.git

      - name: Build Ghostscript core (libgs.so)
        working## 二、`.github/workflows/build.yml`

```yaml
name: Build libgs & libgs_napi

on:
  push:
    branches: [ main ]
  workflow_dispatch:

env:
  NDK_VERSION: '21.4.7075529'
  API_LEVEL: '21'
  ANDROID_ABI: 'arm64-v8a'

jobs:
  build:
    runs-on: ubuntu-latest

    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Install host dependencies
        run: |
          sudo apt-get update
          sudo apt-get install -y git autoconf automake libtool pkg-config

      - name: Setup Android NDK
        uses: android-actions/setup-ndk@v3
        with:
          ndk-version: ${{ env.NDK_VERSION }}

      - name: Clone Ghostscript source
        run: git clone --depth=1 https://github.com/ArtifexSoftware/ghostpdl.git

      - name: Build Ghostscript core (libgs.so)
        working-directory: ghostpdl
        run: |
          mkdir -p build-android && cd build-android
          CC=$ANDROID-directory: ghostpdl
        run: |
          mkdir -p build-android && cd build-android
          CC=$ANDROID_NDK_ROOT/toolchains_NDK_ROOT/toolchains/llvm/prebuilt/linux-x86_64/bin/aarch64-linux-android${API_LEVEL}-clang \
          CXX=$ANDROID_NDK_ROOT/toolchains/llvm/llvm/prebuilt/linux-x86_64/bin/aarch64-linux-android${API_LEVEL}-clang \
          CXX=$ANDROID_NDK_ROOT/toolchains/llvm/prebuilt/linux-x86_64/bin/aarch64-linux-android${API_LEVEL}-clang++ \
            ../configure \
              --host=aarch64-linux/prebuilt/linux-x86_64/bin/aarch64-linux-android${API_LEVEL}-clang++ \
            ../configure \
              --host=aarch64-linux-android \
              --enable-shared \
              --disable-static \
              --with-system-libtiff \
              --prefix=$(pwd)/install
         -android \
              --enable-shared \
              --disable-static \
              --with-system-libtiff \
              --prefix=$(pwd)/install
          make -j$(nproc)
          make install

      - name: Build N-API wrapper (lib make -j$(nproc)
          make install

      - name: Build N-API wrapper (libgs_napi.so)
        working-directory: native
        run: |
          mkdir -p build && cd build
          cmake \
           gs_napi.so)
        working-directory: native
        run: |
          mkdir -p build && cd build
          cmake \
            -DCMAKE_TOOLCHAIN_FILE=$ANDROID_NDK_ROOT/build/cmake/android.toolchain.cmake \
            -DANDROID_ABI=${ -DCMAKE_TOOLCHAIN_FILE=$ANDROID_NDK_ROOT/build/cmake/android.toolchain.cmake \
            -DANDROID_ABI=${ANDROID_ABI} \
            -DANDROID_PLATFORM=android-${API_LEVEL} \
            -DGS_ROOT=${{ github.workspace }}/ghostpdl/build-android/install \
            ..
          make -j$(nproc)

     ANDROID_ABI} \
            -DANDROID_PLATFORM=android-${API_LEVEL} \
            -DGS_ROOT=${{ github.workspace }}/ghostpdl/build-android/install \
            ..
          make -j$(nproc)

      - name: Upload artifacts
        uses: actions/upload-artifact@v4
        with:
          name - name: Upload artifacts
        uses: actions/upload-artifact@v4
        with:
          name: pdf2pclm-libs
          path: |
            ghostpdl/build-android/install/lib/libgs.so
            native/build/libs/${ANDROID_ABI}/libgs_napi.so
``: pdf2pclm-libs
          path: |
            ghostpdl/build-android/install/lib/libgs.so
            native/build/libs/${ANDROID_ABI}/libgs_napi.so
