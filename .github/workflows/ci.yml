name: Build PDF→PCLm Libraries

on:
  push:
  pull_request:

jobs:
  build:
    runs-on: ubuntu-latest

    env:
      CLI_URL: "https://developer.huawei.com/consumer/cn/download/…/command-line-tools-linux-2.3.3.1.tar.gz"

    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Install system dependencies
        run: |
          sudo apt update
          sudo apt install -y git autoconf automake libtool \
                              cmake python3 pkg-config \
                              zlib1g-dev libpng-dev libtiff5-dev

      - name: Download HMOS Command Line Tools
        run: |
          wget -O hmos-cli.tar.gz "${CLI_URL}"
          tar -zxf hmos-cli.tar.gz -C ${{ github.workspace }}

      - name: Set up cross-compile environment
        run: |
          echo "OHOS_NATIVE=${{ github.workspace }}/hmos-cli/native" >> $GITHUB_ENV
          echo "SYSROOT=${{ github.workspace }}/hmos-cli/native/sysroot" >> $GITHUB_ENV
          echo "PATH=${{ github.workspace }}/hmos-cli/native/llvm/aarch64/bin:${{ github.workspace }}/hmos-cli/native/build-tools/bin:$PATH" >> $GITHUB_ENV
          echo "CC=aarch64-unknown-linux-gnu-gcc" >> $GITHUB_ENV
          echo "CXX=aarch64-unknown-linux-gnu-g++" >> $GITHUB_ENV
          echo "AR=aarch64-unknown-linux-gnu-ar" >> $GITHUB_ENV
          echo "RANLIB=aarch64-unknown-linux-gnu-ranlib" >> $GITHUB_ENV
          echo "CFLAGS=--sysroot=${{ github.workspace }}/hmos-cli/native/sysroot -fPIC -O2" >> $GITHUB_ENV
          echo "LDFLAGS=--sysroot=${{ github.workspace }}/hmos-cli/native/sysroot -shared" >> $GITHUB_ENV

      - name: Verify native 目录
        run: |
          test -d "$OHOS_NATIVE/sysroot/usr/include"
          test -x "$OHOS_NATIVE/llvm/aarch64/bin/gcc"

      - name: Build libgs.so (Ghostscript)
        run: |
          git clone https://git.ghostscript.com/ghostpdl.git
          cd ghostpdl
          git checkout 9.55.0
          ./autogen.sh
          ./configure \
            --host=aarch64-unknown-linux-gnu \
            --disable-gtk \
            --disable-fontconfig \
            --disable-compile-inits \
            --with-device-list="pclm" \
            CC=$CC CXX=$CXX CFLAGS="$CFLAGS" LDFLAGS="$LDFLAGS"
          make -j$(nproc)
          make install DESTDIR=$(pwd)/build_output

      - name: Build pdf2pclm.so (Wrapper)
        run: |
          cd wrapper
          mkdir -p build && cd build
          cmake .. \
            -DCMAKE_TOOLCHAIN_FILE=$OHOS_NATIVE/build-tools/cmake/toolchain.cmake \
            -DCMAKE_FIND_ROOT_PATH=$SYSROOT
          make -j$(nproc)

      - name: Upload artifacts
        uses: actions/upload-artifact@v4
        with:
          name: pclm-libs
          path: |
            ghostpdl/build_output/usr/local/ghostscript/lib/libgs.so
            wrapper/build/libpdf2pclm.so
