name: Build PDF→PCLm Libraries

on:
  push:
    branches: [ main ]
  pull_request:

jobs:
  build:
    runs-on: ubuntu-latest
    env:
      CLI_URL: ${{ secrets.HMOS_CLI_URL }}
      OHOS_NATIVE: ${{ github.workspace }}/hmos-cli/native
      SYSROOT: ${{ env.OHOS_NATIVE }}/sysroot
      PATH: ${{ env.OHOS_NATIVE }}/llvm/aarch64/bin:${{ env.OHOS_NATIVE }}/build-tools/bin:$PATH
      CC: aarch64-unknown-linux-gnu-gcc
      CXX: aarch64-unknown-linux-gnu-g++
      AR: aarch64-unknown-linux-gnu-ar
      RANLIB: aarch64-unknown-linux-gnu-ranlib
      CFLAGS: --sysroot=${{ env.SYSROOT }} -fPIC -O2
      LDFLAGS: --sysroot=${{ env.SYSROOT }} -shared

    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Install system dependencies
        run: |
          sudo apt update
          sudo apt install -y git autoconf automake libtool \
                              cmake python3 pkg-config \
                              zlib1g-dev libpng-dev libtiff5-dev

      - name: Download HMOS Command Line Tools
        run: |
          wget -O hmos-cli.tar.gz "${CLI_URL}"
          tar -zxf hmos-cli.tar.gz -C ${{ github.workspace }}

      - name: Verify native目录
        run: |
          test -d "${{ env.OHOS_NATIVE }}/sysroot/usr/include"
          test -x "${{ env.OHOS_NATIVE }}/llvm/aarch64/bin/gcc"

      - name: Build libgs.so (Ghostscript)
        run: |
          git clone https://git.ghostscript.com/ghostpdl.git
          cd ghostpdl
          git checkout 9.55.0
          ./autogen.sh
          ./configure \
            --host=aarch64-unknown-linux-gnu \
            --disable-gtk \
            --disable-fontconfig \
            --disable-compile-inits \
            --with-device-list="pclm" \
            CC=${CC} CXX=${CXX} CFLAGS="${CFLAGS}" LDFLAGS="${LDFLAGS}"
          make -j$(nproc)
          make install DESTDIR=$(pwd)/build_output

      - name: Build pdf2pclm.so (Wrapper)
        run: |
          cd wrapper
          mkdir -p build && cd build
          cmake .. \
            -DCMAKE_TOOLCHAIN_FILE=${{ env.OHOS_NATIVE }}/build-tools/cmake/toolchain.cmake \
            -DCMAKE_FIND_ROOT_PATH=${{ env.SYSROOT }}
          make -j$(nproc)

      - name: Upload artifacts
        uses: actions/upload-artifact@v3
        with:
          name: pclm-libs
          path: |
            ghostpdl/build_output/usr/local/ghostscript/lib/libgs.so
            wrapper/build/libpdf2pclm.so
