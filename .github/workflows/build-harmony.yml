name: Build HarmonyOS HAR (manual zip)

on:
  push:
    branches:
      - main
  workflow_dispatch:

jobs:
  build_harmony:
    runs-on: ubuntu-latest
    env:
      HAP_PROJECT_DIR: harmony-module

    steps:
      - uses: actions/checkout@v4

      - name: Mark workspace as safe
        run: git config --global --add safe.directory "$GITHUB_WORKSPACE"

      - name: Install deps & cross-compilers
        run: |
          sudo apt-get update
          sudo apt-get install -y \
            build-essential git cmake wget unzip zip \
            zlib1g-dev libjpeg-dev libpng-dev libfreetype6-dev \
            nodejs npm gcc-aarch64-linux-gnu g++-aarch64-linux-gnu

      - id: cache-gs
        uses: actions/cache@v3
        with:
          path: gs.tar.gz
          key: ghostscript-10.05.1

      - name: Download Ghostscript tarball
        if: steps.cache-gs.outputs.cache-hit != 'true'
        run: |
          wget -q --show-progress \
            https://github.com/ArtifexSoftware/ghostpdl-downloads/releases/download/gs10051/ghostscript-10.05.1.tar.gz \
            -O gs.tar.gz

      - name: Build Ghostscript & extract libgs.so
        run: |
          tar xzf gs.tar.gz
          cd ghostscript-10.05.1
          CC=aarch64-linux-gnu-gcc \
          CXX=aarch64-linux-gnu-g++ \
            ./configure \
              --host=aarch64-linux-gnu \
              --disable-static \
              --enable-shared
          make -j$(nproc)
          make so
          GS_SO=$(find . -type f -name 'libgs.so*' | head -n1)
          cp "$GS_SO" "${{ github.workspace }}/libgs.so"

      - name: Build native C++ plugin
        run: |
          cd ${{ github.workspace }}/harmony-module/cpp
          mkdir -p build && cd build
          cmake .. \
            -DCMAKE_C_COMPILER=aarch64-linux-gnu-gcc \
            -DCMAKE_CXX_COMPILER=aarch64-linux-gnu-g++ \
            -DHOS_ARCH=arm64-v8a \
            -DGS_SHARED=ON \
            -DGS_LIB_PATH="${{ github.workspace }}/libgs.so"
          make -j$(nproc)
          mkdir -p ../libs/arm64-v8a
          cp libpdf2pclm.so ../libs/arm64-v8a/
          cp "${{ github.workspace }}/libgs.so" ../libs/arm64-v8a/

      - name: Manual HAR packaging
        run: |
          cd ${{ github.workspace }}/harmony-module
          # zip as pure library archive (HAR)
          zip -r ../pdf2pclm.har \
            manifest.json \
            build.json \
            cpp/libs

      - name: Upload HAR artifact
        uses: actions/upload-artifact@v4
        with:
          name: pdf2pclm-harmony-har
          path: ${{ github.workspace }}/pdf2pclm.har
